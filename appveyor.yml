version: 0.1.0.{build}

cache:
  - C:\Users\appveyor\AppData\Local\NuGet\Cache

install:
  - set VERNUM=0.1.0
  - echo %APPVEYOR_REPO_TAG%
  # Build packages as VERNUM-ci{build}
  - ps: if ($env:APPVEYOR_REPO_TAG -eq $True) { $env:PKG_VERSION = $env:VERNUM; } else { $env:PKG_VERSION = "$($env:VERNUM)-ci$($env:APPVEYOR_BUILD_NUMBER)"; }

  # Grab a compiled version of compare-test and add it to the PATH variable.
  - curl -L https://github.com/jonathanvdc/compare-test/releases/download/v0.1.4/compare-test.zip > compare-test.zip
  - mkdir compare-test
  - 7z x compare-test.zip -ocompare-test
  - set PATH=%PATH%;%cd%\compare-test
  # Clone ecsc, compile it and add it to the PATH variable.
  - git clone --depth=5 https://github.com/jonathanvdc/ecsc
  - nuget restore ecsc\src\ecsc.sln
  - msbuild /p:Configuration=Release /verbosity:quiet ecsc\src\ecsc.sln
  - set PATH=%PATH%;%cd%\ecsc\src\ecsc\bin\Release
  # Add cygwin binaries to the PATH
  - set PATH=%PATH%;C:\cygwin\bin

build_script:
  # Restore NuGet packages
  - nuget restore cs-wasm.sln
  # Build cs-wasm with csc
  - msbuild /p:Configuration=Release cs-wasm.sln
  # Build cs-wasm with ecsc
  - make all
  # Build the examples with ecsc
  - make example-projects

after_build:
  # Create a folder that contains all tools and zip it.
  - mkdir cs-wasm-tools
  - xcopy wasm-cat\bin\clr\wasm-cat.exe cs-wasm-tools
  - xcopy wasm-dump\bin\clr\wasm-dump.exe cs-wasm-tools
  - 7z a cs-wasm-tools.zip %APPVEYOR_BUILD_FOLDER%\cs-wasm-tools\*
  # Create the NuGet package
  - nuget pack -Version %PKG_VERSION% libwasm.nuspec

test_script:
  # Run the tests
  - make test

artifacts:
  - path: cs-wasm-tools.zip
    name: cs-wasm-tools
  - path: '*.nupkg'
    name: nupkgs

deploy:
  - provider: NuGet
    server:
    api_key:
      secure: vIYC0UO8DFL2HXrIu20ZQs1NR31SvGZWioDBgXzyMwJEd5dySh5peABsrwWvKzU1
    skip_symbols: true
    artifact: /.*\.nupkg/
    on:
      branch: master # Release from master branch only.
      appveyor_repo_tag: true # Deploy on tag push only.